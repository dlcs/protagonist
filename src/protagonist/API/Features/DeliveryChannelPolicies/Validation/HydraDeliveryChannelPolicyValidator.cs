using FluentValidation;

namespace API.Features.DeliveryChannelPolicies.Validation;

/// <summary>
/// Validator for model sent to POST /deliveryChannelPolicies and PUT/PATCH /deliveryChannelPolicies/{id}
/// </summary>
public class HydraDeliveryChannelPolicyValidator : AbstractValidator<DLCS.HydraModel.DeliveryChannelPolicy>
{
    public HydraDeliveryChannelPolicyValidator()
    {
        RuleFor(p => p.Id)
            .Empty()
            .WithMessage(p => $"DLCS must allocate named delivery channel policy id, but id {p.Id} was supplied");
        RuleFor(p => p.CustomerId)
            .Empty()
            .WithMessage("Should not include user id");
        RuleSet("post", () =>
        {
            RuleFor(p => p.Name)
                .NotEmpty()
                .WithMessage("'name' is required");
            RuleFor(p => p.PolicyData)
                .NotEmpty()
                .WithMessage("'policyData' is required");
        });
        RuleSet("put-patch", () =>
        {
            RuleFor(p => p.Name)
                .Empty()
                .WithMessage("'name' should be set in the URL");
            RuleFor(p => p.PolicyData)
                .NotEmpty()
                .WithMessage("'policyData' is required");
        }); 
        RuleFor(p => p.Channel)
            .Empty()
            .WithMessage("'channel' should be set in the URL");
        RuleFor(p => p.Modified)
            .Empty().WithMessage(c => $"'policyModified' is generated by the DLCS and cannot be set manually");
        RuleFor(p => p.Created)
            .Empty().WithMessage(c => $"'policyCreated' is generated by the DLCS and cannot be set manually");
    }
}