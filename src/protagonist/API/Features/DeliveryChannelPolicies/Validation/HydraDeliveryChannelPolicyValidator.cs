using FluentValidation;

namespace API.Features.DeliveryChannelPolicies.Validation;

/// <summary>
/// Validator for model sent to POST /deliveryChannelPolicies and PUT/PATCH /deliveryChannelPolicies/{id}
/// </summary>
public class HydraDeliveryChannelPolicyValidator : AbstractValidator<DLCS.HydraModel.DeliveryChannelPolicy>
{
    private readonly string[] allowedDeliveryChannels = {"iiif-img", "iiif-av", "thumbs"};

    public HydraDeliveryChannelPolicyValidator()
    {
        RuleFor(p => p.Id)
            .Empty()
            .WithMessage(p => $"DLCS must allocate named delivery channel policy id, but id {p.Id} was supplied");
        RuleFor(p => p.CustomerId)
            .Empty()
            .WithMessage("Should not include user id");
        RuleSet("post", () =>
        {
         
        });
        RuleSet("put", () =>
        {
        
        }); 
        RuleSet("patch", () =>
        {
        
        });         
        RuleFor(p => p.Channel)
            .Must(c => allowedDeliveryChannels.Contains(c))
            .When(p => p != null)
            .WithMessage(p => $"'{p.Channel}' is not a supported delivery channel");
        RuleFor(p => p.Modified)
            .Empty().WithMessage(c => $"'policyModified' is generated by the DLCS and cannot be specified");
        RuleFor(p => p.Created)
            .Empty().WithMessage(c => $"'policyCreated' is generated by the DLCS and cannot be specified");
    }
}