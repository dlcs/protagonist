name: DLCS Build, Test & Publish

on:
  push:
    branches: [ "main", "develop" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main", "develop" ]
    paths-ignore:
      - "docs/**"

jobs:
  test-dotnet:
    runs-on: ubuntu-latest
    env:
      BUILD_CONFIG: "Release"
      SOLUTION: "protagonist.sln"
    steps:
      - id: checkout
        uses: actions/checkout@v2
      - id: setup-dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"
      - id: restore-dotnet-dependencies
        run: dotnet restore $SOLUTION
      - id: build-dotnet
        run: dotnet build $SOLUTION --configuration $BUILD_CONFIG --no-restore
      - id: test-dotnet
        run: dotnet test $SOLUTION --filter 'Category!=Manual' --configuration $BUILD_CONFIG --no-restore --no-build --verbosity normal

  test-compositehandler:
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        uses: actions/checkout@v2
      - id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - id: pre-commit
        uses: pre-commit/action@v2.0.3

  build-push-orchestrator:
    runs-on: ubuntu-latest
    needs: test-dotnet
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/docker-build-and-push
        name: build and push
        with:
          image-name: "orchestrator"
          dockerfile: "Dockerfile.Orchestrator"
          context: "."
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build-push-thumbs:
    runs-on: ubuntu-latest
    needs: test-dotnet
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/docker-build-and-push
        with:
          image-name: "thumbs"
          dockerfile: "Dockerfile.Thumbs"
          context: "."
          github-token: ${{ secrets.GITHUB_TOKEN }}

  build-push-compositehandler:
    runs-on: ubuntu-latest
    needs: test-compositehandler
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/docker-build-and-push
        with:
          image-name: "composite-handler"
          dockerfile: "Dockerfile.CompositeHandler"
          context: "./composite_handler"
          github-token: ${{ secrets.GITHUB_TOKEN }}
